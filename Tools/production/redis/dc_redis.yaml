apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-master
  name: redis-master
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: redis-master
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: redis-master
      annotations:
        telegraf.influxdata.com/inputs: |+
          [[inputs.redis]]
            servers = ["tcp://localhost:6379"]
        telegraf.influxdata.com/class: basic 
        telegraf.influxdata.com/env-fieldref-NAMESPACE: metadata.namespace
        telegraf.influxdata.com/limits-cpu: '750m'
        # invalid memory limit, which will be ignored
        telegraf.influxdata.com/limits-memory: '800x'
        telegraf.influxdata.com/image: 'osokaru/telegraf-timescaledb:4552a531'
    spec:
      volumes:
        - name: redis-ca-volume
          secret:
            secretName: redis-ca
        - name: redis-crt-volume
          secret:
            secretName: redis-crt
        - name: redis-pem-volume
          secret:
            secretName: redis-pem
      containers:
        - env:
            - name: REDIS_HOST
              value: redis-master
            - name: REDIS_PORT
              value: "6379" 
          volumeMounts:
            - name: redis-ca-volume
              mountPath: "/data/ssl/redis_ca.crt"
              subPath: "redis_ca.crt"
            - name: redis-crt-volume
              mountPath: "/data/ssl/redis.crt"
              subPath: "redis.crt"
            - name: redis-pem-volume
              mountPath: "/data/ssl/redis.pem"
              subPath: "redis.pem"
          image: redis
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          #args: ["--port","0","--tls-port","6379","--maxmemory","1GB","--maxclients","1000","--bind","0.0.0.0","--tls-auth-clients","no","--tls-cert-file","/data/ssl/redis.crt","--tls-key-file","/data/ssl/redis.pem","--tls-ca-cert-file","/data/ssl/redis_ca.crt"]
          #args: ["--port","0","--tls-port","6379","--maxmemory","1GB","--maxclients","1000","--bind","0.0.0.0","--tls-auth-clients","no","--tls-cert-file","/data/ssl/redis.crt","--tls-key-file","/data/ssl/redis.pem","--tls-ca-cert-file","/data/ssl/redis_ca.crt"]
            #      dnsPolicy: ClusterFirst
            #      dnsConfig:
            #        searches:
            #          - oscaromeu.io
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsGroup: 999
        runAsUser: 999
        fsGroup: 999
      terminationGracePeriodSeconds: 60
