#TODO: Split configuration in multiple files
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "logstash-config"
  namespace: monitoring
  labels:
    app: "logstash"
data:
  logstash.yml: |
    http.host: 0.0.0.0
    xpack.monitoring.enabled: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "logstash-pipeline"
  namespace: monitoring
  labels:
    app: "logstash"
data:
  uptime.conf: |
    input { exec { command => "uptime" interval => 30 } }
    output { elasticsearch { hosts => ["http://elastic-prod-master-headless:9200"] index => "logstash" } }
---
kind: Service
apiVersion: v1
metadata:
  name: "logstash-headless"
  namespace: monitoring
  labels:
    app: "logstash"
spec:
  clusterIP: None
  selector:
    app: "logstash"
  ports:
    - name: http
      port: 9600
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash
  namespace: monitoring
  labels:
    app: "logstash"
spec:
  serviceName: logstash-headless
  selector:
    matchLabels:
      app: "logstash"
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: logstash
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      name: "logstash"
      labels:
        app: "logstash"
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "logstash"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: "logstash-config"
          configMap:
            name: "logstash-config"
        - name: "logstash-pipeline"
          configMap:
            name: "logstash-pipeline"
      containers:
      - name: "logstash"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/logstash/logstash:7.15.0"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9600
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        env:
          - name: LS_JAVA_OPTS
            value: "-Xmx1g -Xms1g"
        volumeMounts:
          - name: "logstash"
            mountPath: /usr/share/logstash/data
          - name: "logstash-config"
            mountPath: /usr/share/logstash/config/logstash.yml
            subPath: logstash.yml
          - name: "logstash-pipeline"
            mountPath: /usr/share/logstash/pipeline/uptime.conf
            subPath: uptime.conf
