apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    sync-time: "2024-04-08T18:51:32Z"
  creationTimestamp: "2024-04-08T18:51:32Z"
  generateName: self-hosted-cache-
  generation: 1
  labels:
    app.kubernetes.io/name: cluster-apps-actions-runners
    kustomize.toolkit.fluxcd.io/name: cluster-apps-actions-runners
    kustomize.toolkit.fluxcd.io/namespace: flux-system
    runner-template-hash: fcbb5865
  name: self-hosted-cache-6rljm
  namespace: actions-runner-system
  ownerReferences:
  - apiVersion: actions.summerwind.dev/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: RunnerSet
    name: self-hosted-cache
    uid: b0d5df76-090b-460a-b820-246332a73424
  resourceVersion: "87841827"
  uid: eb379f43-7d26-4047-acf5-1a9259c87cca
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      actions-runner-controller/inject-registration-token: "true"
      app: self-hosted-cache
      runner-template-hash: fcbb5865
      runnerset-name: self-hosted-cache
  serviceName: self-hosted-cache
  template:
    metadata:
      creationTimestamp: null
      labels:
        actions-runner: ""
        actions-runner-controller/inject-registration-token: "true"
        app: self-hosted-cache
        runner-template-hash: fcbb5865
        runnerset-name: self-hosted-cache
    spec:
      containers:
      - env:
        - name: DOCKER_ENABLED
          value: "true"
        - name: DOCKERD_IN_RUNNER
          value: "false"
        - name: DOCKER_GROUP_GID
          value: "1001"
        - name: RUNNER_ORG
        - name: RUNNER_REPO
          value: oscaromeu/fastapi-observability
        - name: RUNNER_ENTERPRISE
        - name: RUNNER_LABELS
          value: self-hosted-cache
        - name: RUNNER_GROUP
        - name: DOCKER_ENABLED
          value: "true"
        - name: DOCKERD_IN_RUNNER
          value: "false"
        - name: GITHUB_URL
          value: https://github.com/
        - name: RUNNER_WORKDIR
          value: /runner/_work
        - name: RUNNER_EPHEMERAL
          value: "true"
        - name: RUNNER_STATUS_UPDATE_HOOK
          value: "false"
        - name: GITHUB_ACTIONS_RUNNER_EXTRA_USER_AGENT
          value: actions-runner-controller/v0.27.6
        - name: DOCKER_HOST
          value: unix:///run/docker.sock
        image: summerwind/actions-runner:latest
        imagePullPolicy: Always
        name: runner
        resources: {}
        securityContext: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket
        - mountPath: /runner
          name: runner
        - mountPath: /runner/_work
          name: work
        - mountPath: /run
          name: var-run
      - args:
        - dockerd
        - --host=unix:///run/docker.sock
        - dockerd
        - --host=unix:///var/run/docker.sock
        - --group=$(DOCKER_GROUP_GID)
        - --group=$(DOCKER_GROUP_GID)
        env:
        - name: DOCKER_GROUP_GID
          value: "1001"
        image: docker:dind
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - timeout "${RUNNER_GRACEFUL_STOP_TIMEOUT:-15}" /bin/sh -c "echo 'Prestop
                hook started'; while [ -f /runner/.runner ]; do sleep 1; done; echo
                'Waiting for dockerd to start'; while ! pgrep -x dockerd; do sleep
                1; done; echo 'Prestop hook stopped'" >/proc/1/fd/1 2>&1
        name: docker
        resources: {}
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: docker-socket
        - mountPath: /runner
          name: runner
        - mountPath: /run
          name: var-run
        - mountPath: /runner/_work
          name: work
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: runner
      - emptyDir: {}
        name: work
      - emptyDir:
          medium: Memory
          sizeLimit: 1M
        name: var-run
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      name: var-lib-docker
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 3Gi
      storageClassName: local-path
      volumeMode: Filesystem
    status:
      phase: Pending
status:
  availableReplicas: 0
  collisionCount: 0
  currentRevision: self-hosted-cache-6rljm-56d679f868
  observedGeneration: 1
  replicas: 0
  updateRevision: self-hosted-cache-6rljm-56d679f868
