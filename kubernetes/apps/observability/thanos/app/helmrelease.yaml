---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: observability
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.bitnami.com/bitnami
      chart: thanos
      version: 12.16.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 5m

  install:
    createNamespace: true
    remediation:
      retries: 5

  upgrade:
    remediation:
      retries: 5

  dependsOn:
    - name: kube-prometheus-stack
      namespace: observability
    - name: local-path-provisioner
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph

  values:
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.32.5
    objstoreConfig:
      type: s3
      config:
        insecure: true

    query:
      enabled: true
      replicaCount: 1
      # https://github.com/bitnami/charts/blob/main/bitnami/thanos/values.yaml#L170
      replicaLabel: ["__replica__"]
      dnsDiscovery:
        enabled: true
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsnamespace: observability
      ingress:
        enabled: true
        hostname: "thanos.${SECRET_DOMAIN}"
        ingressClassName: "internal"
        tls: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:prometheus
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"

    queryFrontend:
      enabled: true
      replicaCount: 2
      extraFlags:
        #- --query-frontend.log-queries-longer-than=60s
        - |-
          --query-range.response-cache-config="config":
            "addr": "redis-headless.datahub.svc.cluster.local:26379"
            "username": ""
            "password": ""
            "db": 1
            "dial_timeout": "5s"
            "read_timeout": "3s"
            "write_timeout": "3s"
            "max_get_multi_concurrency": 100
            "get_multi_batch_size": 100
            "max_set_multi_concurrency": 100
            "set_multi_batch_size": 100
            "tls_enabled": false
            "cache_size": 0
            "expiration": "24h0m0s"
            "master_name": "redis-master"
          "type": "redis"
        - |-
          --labels.response-cache-config="config":
            "addr": "redis-headless.datahub.svc.cluster.local:26379"
            "username": ""
            "password": ""
            "db": 1
            "dial_timeout": "5s"
            "read_timeout": "3s"
            "write_timeout": "3s"
            "max_get_multi_concurrency": 100
            "get_multi_batch_size": 100
            "max_set_multi_concurrency": 100
            "set_multi_batch_size": 100
            "tls_enabled": false
            "cache_size": 0
            "expiration": "24h0m0s"
            "master_name": "redis-master"
          "type": "redis"
      ingress:
        enabled: true
        hostname: "thanos-query-frontend.${SECRET_DOMAIN}"
        ingressClassName: "internal"
        tls: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:prometheus
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"

    bucketweb:
      enabled: true
      replicaCount: 2
      #resources:
      #  limits:
      #    memory:
      #  requests:
      #    memory:
      #    cpu:
      ingress:
        enabled: true
        hostname: "thanos-bucket.${SECRET_DOMAIN}"
        ingressClassName: "internal"
        tls: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:prometheus
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"

    compactor:
      enabled: true
      extraFlags:
        - --compact.concurrency=4
        - --delete-delay=30m
      retentionResolutionRaw: 30d
      retentionResolution5m: 1y
      retentionResolution1h: 2y
      consistencyDelay: 30m
      compact.concurrency: 6
      downsample.concurrency: 6
      block-sync-concurrency: 60
      persistence:
        enabled: true
        size: 10Gi
        storageClass: "local-path"

    storegateway:
      enabled: true
      replicaCount: 2
      persistence:
        enabled: true
        storageClass: local-path
        size: 10Gi
      extraFlags:
        - |-
          --index-cache.config="config":
            "addr": "redis-headless.datahub.svc.cluster.local:26379"
            "username": ""
            "password": ""
            "db": 1
            "dial_timeout": "5s"
            "read_timeout": "3s"
            "write_timeout": "3s"
            "max_get_multi_concurrency": 100
            "get_multi_batch_size": 100
            "max_set_multi_concurrency": 100
            "set_multi_batch_size": 100
            "tls_enabled": false
            "cache_size": "125MB"
            "expiration": "24h0m0s"
            "master_name": "redis-master"
          "type": "redis"
      podAntiAffinityPreset: hard

    receive:
      enabled: true
      mode: standalone
      logLevel: debug
      tsdbRetention: 2h
      extraFlags:
        - --objstore.config=$(OBJSTORE_CONFIG)
      replicationFactor: 1
      replicaLabel: __replica__
      replicaCount: 1
      resources:
        limits: {}
        requests: {}
      persistence:
        enabled: true
        storageClass: "ceph-filesystem"
        size: 10Gi
      ingress:
        enabled: true
        hostname: receive.${SECRET_DOMAIN}
        ingressClassName: "internal"
        tls: true
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: simple-icons:prometheus
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        extraRules:
          - host: "receive.${SECRET_DOMAIN}"
            http:
              paths:
                - path: /api/v1/receive
                  pathType: Prefix
                  backend:
                    service:
                      name: "thanos-receive"
                      port:
                        name: remote
                - path: /api/v1/status/tsdb
                  pathType: Prefix
                  backend:
                    service:
                      name: "thanos-receive"
                      port:
                        name: http

    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

  valuesFrom:
    - targetPath: objstoreConfig.config.bucket
      kind: ConfigMap
      name: thanos-bucket-v2
      valuesKey: BUCKET_NAME
    - targetPath: objstoreConfig.config.endpoint
      kind: ConfigMap
      name: thanos-bucket-v2
      valuesKey: BUCKET_HOST
    - targetPath: objstoreConfig.config.region
      kind: ConfigMap
      name: thanos-bucket-v2
      valuesKey: BUCKET_REGION
    - targetPath: objstoreConfig.config.access_key
      kind: Secret
      name: thanos-bucket-v2
      valuesKey: AWS_ACCESS_KEY_ID
    - targetPath: objstoreConfig.config.secret_key
      kind: Secret
      name: thanos-bucket-v2
      valuesKey: AWS_SECRET_ACCESS_KEY
