---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m

  values:
    image:
      repository: vaultwarden/server
      tag: "1.28.1"

    strategy:
      type: Recreate

    env:
      TZ: "${TIMEZONE}"
      DOMAIN: "https://vault.${SECRET_DOMAIN}"
      DATA_FOLDER: "config"
      ICON_CACHE_FOLDER: "config/icon_cache"
      ATTACHMENTS_FOLDER: "config/attachments"
      SENDS_FOLDER: "config/sends"
      SIGNUPS_ALLOWED: false
      INVITATIONS_ALLOWED: false
      WEBSOCKET_ENABLED: true
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_PORT: 3012
      SENDS_ALLOWED: true
      EMERGENCY_ACCESS_ALLOWED: true
      DISABLE_ICON_DOWNLOAD: false
      DISABLE_2FA_REMEMBER: false
      EMAIL_ATTEMPTS_LIMIT: 3
      PASSWORD_HINTS_ALLOWED: false
      ROCKET_PORT: 8080
      # 'DATABASE_URL=postgresql://user_name:user_password@db_host:5432/vaultwarden'
      DATABASE_URL: "postgresql://$${POSTGRES_USER}:$${POSTGRES_PASS}@$${POSTGRES_DB}:$${POSTGRES_PORT}/$${POSTGRES_DB}"
      #SMTP_SSL: true
      #SMTP_PORT: 587

      #SIGNUPS_DOMAINS_WHITELIST:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SIGNUPS_DOMAINS_WHITELIST

      ORG_CREATION_USERS:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: ORG_CREATION_USERS

      POSTGRES_DB:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: POSTGRES_DB

      POSTGRES_HOST:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: POSTGRES_HOST

      POSTGRES_PORT:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: POSTGRES_PORT

      POSTGRES_USER:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: POSTGRES_USER

      POSTGRES_PASS:
        valueFrom:
          secretKeyRef:
            name: vault-env
            key: POSTGRES_PASS


      # Not used
      #INVITATION_ORG_NAME:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: INVITATION_ORG_NAME

      # Not used
      #SMTP_HOST:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SMTP_HOST

      #SMTP_FROM:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SMTP_FROM

      #SMTP_FROM_NAME:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SMTP_FROM

      #SMTP_USERNAME:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SMTP_USERNAME

      #SMTP_PASSWORD:
      #  valueFrom:
      #    secretKeyRef:
      #      name: vault-env
      #      key: SMTP_PASSWORD

    envFrom:
      - secretRef:
          name: vault-env

    service:
      main:
        ports:
          http:
            port: 8080
          websocket:
            enabled: true
            port: 3012

    ingress:
      main:
        enabled: false
        ingressClassName: "nginx"
        annotations:

          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
          hajimari.io/appName: "vault"
          # external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        hosts:
        - host: &host "vault.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
            service:
              port: 8080
          - path: /notifications/hub
            pathType: Prefix
            service:
              port: 3012
          - path: /notifications/hub/negotiate
            pathType: Prefix
            service:
              port: 8080
        tls:
        - hosts:
          - *host
      admin:
        enabled: false
        ingressClassName: "nginx"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
          hajimari.io/appName: "vaultadmin"
        hosts:
        - host: *host
          paths:
          - path: /admin
            pathType: Prefix
            service:
              port: 8080
        tls:
        - hosts:
          - *host

    persistence:
      config:
        enabled: false
        existingClaim: vaultwarden-config-v1

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 2000Mi

    poddefaultContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
