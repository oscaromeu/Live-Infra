---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app authelia
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cnpg
      namespace: dbms
    - name: glauth
      namespace: security
    - name: redis
      namespace: dbms
  values:
    initContainers:
      init-db:
        image: ghcr.io/haraldkoch/postgres-initdb:15.2
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: authelia-secret
    controller:
      replicas: 2
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/authelia/authelia
      # TODO Switch to Authelia release tag on next release
      tag: master@sha256:28095105a80bdf320bb494b1379ed8978e95e2cf106977dd60fe423a3b258718
    args: ["--config", "/config/configuration.yml", "--config.experimental.filters", "expand-env"]
    envFrom:
      - secretRef:
          name: authelia-secret
    enableServiceLinks: false
    service:
      main:
        ipFamilyPolicy: PreferDualStack
        ports:
          http:
            port: &port 80
          metrics:
            enabled: true
            port: 8080
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /api/health
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.home.arpa/enabled: "true"
          hajimari.io/appName: authelia
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:shield-account
          nginx.ingress.kubernetes.io/configuration-snippet: |
            add_header Cache-Control "no-store";
            add_header Pragma "no-cache";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
        hosts:
          - host: &host "auth.${CLUSTER_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        type: configMap
        name: authelia
        subPath: configuration.yml
        mountPath: /config/configuration.yml
        readOnly: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
    resources:
      requests:
        cpu: 5m
        memory: 10Mi
      limits:
        memory: 100Mi
