---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: harbor
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: harbor
      version: 1.12.0
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    expose:
      type: clusterIP
      tls:
        enabled: true
        certSource: auto
        auto:
          commonName: "harbor-tls"
        secret:
          secretName: "harbor-tls"
      ingress:
        hosts:
          core: cr.${SECRET_DOMAIN}
        controller: default
        className: "nginx"
        annotations:
          ingress.kubernetes.io/ssl-redirect: "true"
          ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
        harbor:
          annotations: {}
    externalURL: https://hr.${SECRET_DOMAIN}
    ipFamily:
      ipv6:
        enabled: false
    persistence:
      enabled: true
      persistentVolumeClaim:
        registry:
          existingClaim: "harbor-registry"
        jobservice:
          jobLog:
            existingClaim: "harbor-jobservice"
          scanDataExports:
            existingClaim: "harbor-jobservice-scandata"
        database:
          existingClaim: "harbor-database"
        redis:
          existingClaim: "harbor-redis"
        trivy:
          existingClaim: "harbor-trivy"


    imagePullPolicy: IfNotPresent
    updateStrategy:
      type: Recreate
    # debug, info, warning, error or fatal
    logLevel: info
    existingSecretSecretKey: "harbor-secrets"

    portal:
      image:
        repository: goharbor/harbor-portal
        tag: dev
      revisionHistoryLimit: 3
    core:
      image:
        repository: goharbor/harbor-core
        tag: dev
      revisionHistoryLimit: 3
      podAnnotations:
        secret.reloader.stakater.com/reload: "harbor-secrets"
    jobservice:
      image:
        repository: goharbor/harbor-jobservice
        tag: dev
      revisionHistoryLimit: 3
    registry:
      registry:
        image:
          repository: goharbor/registry-photon
          tag: dev
      controller:
        image:
          repository: goharbor/harbor-registryctl
          tag: dev
      upload_purging:
        enabled: true
        # remove files in _upload directories which exist for a period of time, default is one week.
        age: 168h
        # the interval of the purge operations
        interval: 24h
        dryrun: false
      revisionHistoryLimit: 3
    chartmuseum:
      enabled: false
    trivy:
      enabled: false
      image:
        repository: goharbor/trivy-adapter-photon
        tag: dev
    notary:
      enabled: false

    database:
      # if external database is used, set "type" to "external"
      # and fill the connection informations in "external" section
      type: internal
      internal:
        image:
          repository: goharbor/harbor-db
          tag: dev
      external:
        host: "192.168.0.1"
        port: "5432"
        username: "user"
        password: "password"
        coreDatabase: "registry"
        # if using existing secret, the key must be "password"
        existingSecret: ""
      maxIdleConns: 100
      maxOpenConns: 900
      podAnnotations: {}

    redis:
      type: internal
      internal:
        image:
          repository: goharbor/redis-photon
          tag: dev
      external:
        # support redis, redis+sentinel
        # addr for redis: <host_redis>:<port_redis>
        # addr for redis+sentinel: <host_sentinel1>:<port_sentinel1>,<host_sentinel2>:<port_sentinel2>,<host_sentinel3>:<port_sentinel3>
        addr: "192.168.0.2:6379"
        # The name of the set of Redis instances to monitor, it must be set to support redis+sentinel
        sentinelMasterSet: ""
        # The "coreDatabaseIndex" must be "0" as the library Harbor
        # used doesn't support configuring it
        coreDatabaseIndex: "0"
        jobserviceDatabaseIndex: "1"
        registryDatabaseIndex: "2"
        chartmuseumDatabaseIndex: "3"
        trivyAdapterIndex: "5"
        password: ""
        # If using existingSecret, the key must be REDIS_PASSWORD
        existingSecret: ""
      podAnnotations: {}

    exporter:
      replicas: 1
      revisionHistoryLimit: 3
      image:
        repository: goharbor/harbor-exporter
        tag: dev
    metrics:
      enabled: false
      core:
        path: /metrics
        port: 8001
      registry:
        path: /metrics
        port: 8001
      jobservice:
        path: /metrics
        port: 8001
      exporter:
        path: /metrics
        port: 8001
      serviceMonitor:
        enabled: true
    trace:
      enabled: false
    cache:
      enabled: false
      expireHours: 24

  valuesFrom:
    - targetPath: harborAdminPassword
      kind: Secret
      name: harbor
      valuesKey: harborAdminPassword
    - targetPath: database.internal.password
      kind: Secret
      name: harbor
      valuesKey: databaseInternalPassword
    #- targetPath: trivy.gitHubToken
    #  kind: Secret
    #  name: harbor-secrets
    #  valuesKey: GITHUB_COM_TOKEN
