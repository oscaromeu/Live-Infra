---
sources:

  k3s_logging_src:
    type: redis
    url: redis://redis-master.logging.svc.cluster.local:6379/0
    key: "k3s_prod:logging"

transforms:

  #kubernetes_remap:
  #  type: remap
  #  inputs:
  #    - k3s_logging_src
  #  source: |
  #    # Standardize 'app' index
  #    .app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"

  loki_filter:
    type: filter
    inputs:
      - k3s_logging_src
    condition: |
      ".pod_labels.app == \"flog-generator\""

  blakchole_filter:
    type: filter
    inputs:
      - k3s_logging_src
    condition: |
      ".pod_labels.\"app.kubernetes.io/name\" == \"loki\""

  elasticsearch_filter:
    type: filter
    inputs:
      - k3s_logging_src
    condition: |
      ".pod_labels.\"app.kubernetes.io/name\" != \"loki\" && .pod_labels.app != \"flog-generator\""

sinks:

  blackhole:
    type: blackhole
    inputs:
      - blakchole_filter

  stdout:
    type: console
    encoding:
      codec: "text"
    inputs:
      - loki_filter

  loki:
    type: loki
    batch:
      max_bytes: 2049000
    labels:
      namespace: logging
      environment: production
    encoding:
      codec: json
    endpoint: http://loki.logging.svc.cluster.local:3100
    inputs:
      - loki_filter
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true


  elasticsearch:
    type: elasticsearch
    inputs:
      - elasticsearch_filter
    auth:
      strategy: "basic"
      user: "ingestion"
      password: "monitor" # local temporal user for testing
    data_stream:
      # {data_stream.type}-{data_stream.dataset}-{data_stream.namespace}
      # https://www.elastic.co/guide/en/ecs/master/ecs-data_stream.html
      type: logs
      dataset: "k3s_prod"
      namespace: logging
    mode: "data_stream"
    bulk:
      action: "create"
    endpoints:
      - "https://elk-es-http.logging.svc.cluster.local:9200"
    tls:
      verify_certificate: false






