---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: thanos
      version: 12.0.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 10m
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  maxHistory: 3
  values:
    image:
      repository: thanosio/thanos
      tag: v0.29.0
    queryFrontend:
      enabled: false
    query:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"] # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName`
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-query.devfu.io
        tls: true
        extraTls:
          - hosts:
              - *host
    bucketweb:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-bucketweb.devfu.io
        tls: true
        extraTls:
          - hosts:
              - *host
    compactor:
      enabled: true
      extraFlags: ["--compact.concurrency", "4"]
      retentionResolutionRaw: 7d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-compactor.devfu.io
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    storegateway:
      enabled: true
      replicaCount: 3
      podAntiAffinityPreset: hard
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-storegateway.devfu.io
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    ruler:
      enabled: true
      replicaCount: 1
      podAntiAffinityPreset: hard
      dnsDiscovery:
        enabled: true
      alertmanagers: ["http://kube-prometheus-stack-alertmanager.monitoring:9093"]
      # Breaks any metric that has an existing "cluster" label on a metric
      # clusterName: home # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.externalLabels.cluster`
      extraFlags: ["--web.prefix-header=X-Forwarded-Prefix"]
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          hajimari.io/enable: "false"
        hostname: &host thanos-ruler.devfu.io
        tls: true
        extraTls:
          - hosts:
              - *host
      persistence:
        enabled: true
        storageClass: local-path
        size: 20Gi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    serviceMonitor:
      enabled: true
    objstoreConfig:
      type: GCS
      config:
        bucket: 'home-ops-thanos-bucket'
  valuesFrom:
    - kind: Secret
      name: thanos-objstore-secret
