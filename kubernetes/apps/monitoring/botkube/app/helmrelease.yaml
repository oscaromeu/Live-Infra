---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app botkube
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: botkube
      version: v0.12.4
      sourceRef:
        kind: HelmRepository
        name: infracloudio
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    deployment:
      annotations:
        secret.reloader.stakater.com/reload: *app
    image:
      repository: docker.io/infracloudio/botkube
      tag: v0.12.1
      pullPolicy: Always
    serviceMonitor:
      enabled: true
    sources:
      'k8s-events':
        kubernetes:
          recommendations:
            pod:
              noLatestImageTag: false
              labelsSet: false
            ingress:
              backendServiceValid: false
              tlsSecretValid: false

          resources:
            - name: v1/pods
              namespaces:
                include:
                  - ".*"
              events:
                - create
                - delete
                - error
            - name: v1/services
              namespaces:
                include:
                  - ".*"
              events:
                - create
                - delete
                - error

    executors:
      'kubectl-read-only':
        kubectl:
          namespaces:
            include:
              - ".*"
          enabled: true
          commands:
            verbs: ["describe", "get", "logs"]
            resources: ["pods","services"]
          defaultNamespace: default
          restrictAccess: false
      'kubectl-admin':
        kubectl:
          namespaces:
            include:
              - ".*"
          enabled: true
          commands:
            verbs: ["label", "delete"]
            resources: ["deployments", "pods"]
          defaultNamespace: default
          restrictAccess: false

    communications:
      'default-group':
        slack:
          enabled: true
          channels:
            'team':
              name: 'monitoring'
              bindings:
                executors:
                  - kubectl-read-only
                sources:
                  - k8s-events
            'admin':
              name: 'admin'
              bindings:
                executors:
                  - kubectl-read-only
                  - kubectl-admin

          #token: 'SLACK_API_TOKEN'
          notification:
            type: short

    settings:
      clustername: 'home-ops'
      upgradeNotifier: false

    configWatcher:
      enabled: false

    # -- Role Based Access for Botkube Pod.
    # [Ref doc](https://kubernetes.io/docs/admin/authorization/rbac/).
    rbac:
      create: true
      rules:
        - apiGroups: ["*"]
          resources: ["*"]
          verbs: ["get", "watch", "list"]

        # to be able to run `kubectl label pod`
        - apiGroups: [""]
          resources: ["pods"]
          verbs: ["patch"]

        # to be able to run `kubectl delete pod`
        - apiGroups: [""]
          resources: ["pods"]
          verbs: ["delete"]

    serviceAccount:
      create: true
  valuesFrom:
    - kind: Secret
      name: botkube
      valuesKey: slack_api_token
      targetPath: communications.slack.token
      optional: false
    - kind: Secret
      name: botkube
      valuesKey: slack_channel
      targetPath: communications.slack.channel
      optional: false
