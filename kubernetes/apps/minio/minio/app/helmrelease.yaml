---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: minio
spec:
  interval: 30m
  chart:
    spec:
      chart: minio
      version: 5.0.13
      sourceRef:
        kind: HelmRepository
        name: minio
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # Get root user/password from secret
    existingSecret: minio-secret

    # Number of drives attached to a node
    drivesPerNode: 1
    # Number of MinIO containers running
    replicas: 3
    # Number of expanded MinIO clusters
    pools: 1

    # Run minio server only on amd64 nodes
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
              - amd64

    # Persistence
    persistence:
      enabled: true
      storageClass: "longhorn"
      accessMode: ReadWriteOnce
      size: 10Gi

    # Resource request
    resources:
      requests:
        memory: 512Mi

    # Minio Buckets
    buckets:
      - name: k3s-loki
        policy: none
      - name: k3s-tempo
        policy: none

    # Service Monitor
    metrics:
      serviceMonitor:
        enabled: true
        includeNode: true

    # Minio Policies
    policies:
      - name: loki
        statements:
          - resources:
              - 'arn:aws:s3:::k3s-loki'
              - 'arn:aws:s3:::k3s-loki/*'
            actions:
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:PutObject"
      - name: tempo
        statements:
          - resources:
              - 'arn:aws:s3:::k3s-tempo'
              - 'arn:aws:s3:::k3s-tempo/*'
            actions:
              - "s3:DeleteObject"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:PutObject"
              - "s3:GetObjectTagging"
              - "s3:PutObjectTagging"

    # Minio Users
    users:
      - accessKey: loki
        existingSecret: minio-secret
        existingSecretKey: minio-secret-key
        policy: loki
      - accessKey: tempo
        existingSecret: minio-secret
        existingSecretKey: minio-secret-key
        policy: tempo

    ingress:
      enabled: true
      ingressClassName: external
      hosts:
        - &host s3.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
      path: /
      annotations:
        external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
        hajimari.io/icon: simple-icons:minio


    consoleIngress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - &host minio.${SECRET_DOMAIN}
      tls:
        - hosts:
            - *host
      path: /
      annotations:
        external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
        hajimari.io/icon: simple-icons:minio

    environment:
      - name: MINIO_PROMETHEUS_URL
        value: "http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090"
      - name: MINIO_BROWSER
        value: on
