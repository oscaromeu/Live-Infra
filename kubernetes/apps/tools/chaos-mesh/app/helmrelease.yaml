---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: chaos-mesh
  namespace: tools
  labels:
    environment: production
    app: chaos-mesh
spec:
  interval: 15m
  chart:
    spec:
      chart: chaos-mesh
      version: 2.6.3
      sourceRef:
        kind: HelmRepository
        name: chaos-mesh
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # clusterScoped is whether chaos-mesh should manage kubernetes cluster wide chaos
    # Also see rbac.create and controllerManager.serviceAccount
    clusterScoped: true

    rbac:
      create: true

    timezone: "UTC"

    # enableProfiling is a flag to enable pprof in controller-manager and chaos-daemon.
    enableProfiling: true

    # enableCtrlServer is a flag to enable ctrlserver which provides service to chaosctl in controller-manager.
    enableCtrlServer: true

    images:
      # images.registry is the global container registry for the images, you could replace it with your self-hosted container registry.
      registry: "ghcr.io"
      # images.tag is the global image tag (for example, semiVer with prefix v, or latest).
      tag: "v2.6.3"

    controllerManager:
      replicaCount: 3
      # image would be constructed by <registry>/<repository>:<tag>
      image:
        registry: ""
        repository: chaos-mesh/chaos-mesh
        tag: ""
      imagePullPolicy: IfNotPresent

      env:
        WEBHOOK_PORT: 10250
        METRICS_PORT: 10080
      enableFilterNamespace: false
      # targetNamespace only works with clusterScoped is false(namespace scoped mode).
      # It means namespace which will be injected chaos
      targetNamespace: chaos-mesh

      service:
        type: ClusterIP

      resources:
        limits:
          #cpu: 500m
          memory: 1024Mi
        requests:
          cpu: 25m
          memory: 256Mi
      podAnnotations: {}
      enabledControllers:
        - "*"
      enabledWebhooks:
        - "*"
      podChaos:
        podFailure:
          pauseImage: gcr.io/google-containers/pause:latest
      leaderElection:
        enabled: true
        leaseDuration: 15s
        renewDeadline: 10s
        retryPeriod: 2s
      chaosdSecurityMode: true
      localHelmChart:
        enabled: false
        volume:
          hostPath:
            path: /data/helm
            type: DirectoryOrCreate

    chaosDaemon:
      # image would be constructed by <registry>/<repository>:<tag>
      image:
        registry: ""
        repository: chaos-mesh/chaos-daemon
        tag: ""
      capabilities:
        add:
          - SYS_PTRACE
          - NET_ADMIN
          - NET_RAW
          - MKNOD
          - SYS_CHROOT
          - SYS_ADMIN
          - KILL
          # CAP_IPC_LOCK is used to lock memory
          - IPC_LOCK
      privileged: true
      runtime: containerd
      socketPath: /run/k3s/containerd/containerd.sock

      resources:
        limits:
          #cpu: 500m
          memory: 1024Mi
        requests:
          cpu: 250m
          memory: 512Mi

    dashboard:
      # Enable chaos-dashboard
      create: true
      replicaCount: 1
      image:
        registry: ""
        repository: chaos-mesh/chaos-dashboard
        tag: ""
      imagePullPolicy: IfNotPresent
      service:
        type: ClusterIP

      # CPU/Memory resource requests/limits for chaos-dashboard pod
      resources:
        limits:
          #cpu: 500m
          memory: 1024Mi
        requests:
          cpu: 25m
          memory: 256Mi

      persistentVolume:
        enabled: false
        existingClaim: ""
        size: 8Gi
        storageClassName: standard
        mountPath: /data
        subPath: ""

      env:
        # The address which chaos-dashboard would listen on.
        LISTEN_HOST: 0.0.0.0
        # The port which chaos-dashboard would listen on.
        LISTEN_PORT: 2333
        # The address which metrics endpoints would listen on.
        METRIC_HOST: 0.0.0.0
        # The ports which metrics endpoints would listen on.
        METRIC_PORT: 2334

        # If you'd like to use a DB other than SQLite (the default), set a driver + DSN here.
        DATABASE_DRIVER: sqlite3
        # The db dsn used for Chaos Dashboard
        DATABASE_DATASOURCE: /data/core.sqlite

        # Set the sync period to clean up archived data
        CLEAN_SYNC_PERIOD: 12h
        # Set TTL of archived event data
        TTL_EVENT: 168h
        # Set TTL of archived experiment data
        TTL_EXPERIMENT: 336h
        # Set TTL of archived schedule data
        TTL_SCHEDULE: 336h
        # Set TTL of archived workflow data
        TTL_WORKFLOW: 336h
      ingress:
        ## Set to true to enable ingress record generation
        enabled: true

        ## Set this to true in order to add the corresponding annotations for cert-manager
        certManager: false
        hosts:
          - name: &host chaos-mesh.${SECRET_DOMAIN}
            tls: false
            tlsHosts:
            - *host
            ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
            tlsSecret: dashboard.local-tls
        ingressClassName: "internal"

    dnsServer:
      create: true
      # image would be constructed by <registry>/<repository>:<tag>
      image:
        registry: ""
        repository: chaos-mesh/chaos-coredns
        tag: "v0.2.6"
      # Image pull policy
      imagePullPolicy: IfNotPresent
      replicas: 1
      resources:
        limits:
          #cpu: 500m
          memory: 1024Mi
        requests:
          cpu: 100m
          memory: 70Mi
      env:
        LISTEN_HOST: "0.0.0.0"
        LISTEN_PORT: 53
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - chaos-dns-server
                topologyKey: kubernetes.io/hostname
              weight: 100


      CRDS:
        - podchaos
        - iochaos
        - timechaos
        - networkchaos
        - kernelchaos
        - stresschaos
        - awschaos
        - azurechaos
        - gcpchaos
        - dnschaos
        - jvmchaos
        - schedule
        - workflow
        - httpchaos
        - blockchaos
        - physicalmachinechaos
        - physicalmachine
        - statuscheck
        - remotecluster

    bpfki:
      # Enable chaos-kernel
      create: false
      # image would be constructed by <registry>/<repository>:<tag>
      image:
        registry: ""
        repository: chaos-mesh/chaos-kernel
        tag: ""
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          #cpu: 500m
          memory: 1024Mi
        requests:
          cpu: 250m
          memory: 512Mi

    chaosDlv:
      enable: false
      # image would be constructed by <registry>/<repository>:<tag>
      image:
        registry: ""
        repository: chaos-mesh/chaos-dlv
        tag: ""
      imagePullPolicy: IfNotPresent
